services:
  # MySQL Database for Development
  mysql:
    image: mysql:8.0
    container_name: company-management-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: ${TZ}
    ports:
      - "33066:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - company-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Golang Server for Development (with hot-reload)
  server:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: development
    container_name: company-management-server-dev
    restart: unless-stopped
    environment:
      GO_ENV: ${GO_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SERVER_PORT: ${SERVER_PORT}
      TZ: ${TZ}
    ports:
      - "8808:8080"
    volumes:
      - ../server:/app
      - /app/tmp
    networks:
      - company-network
    depends_on:
      mysql:
        condition: service_healthy
    command: air -c .air.toml

  # Nginx Reverse Proxy for Development
  nginx:
    image: nginx:alpine
    container_name: company-management-nginx-dev
    restart: unless-stopped
    ports:
      - "880:80"
      - "4443:443"
    volumes:
      - ../nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs_dev:/var/log/nginx
    networks:
      - company-network
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  company-network:
    driver: bridge

volumes:
  mysql_data_dev:
    driver: local
  nginx_logs_dev:
    driver: local

